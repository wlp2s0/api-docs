(self.webpackChunkdev_rev_docs=self.webpackChunkdev_rev_docs||[]).push([[1002],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return m},kt:function(){return c}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function d(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var o=a.createContext({}),s=function(t){var e=a.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},m=function(t){var e=s(t.components);return a.createElement(o.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,o=t.parentName,m=d(t,["components","mdxType","originalType","parentName"]),u=s(n),c=r,k=u["".concat(o,".").concat(c)]||u[c]||p[c]||i;return n?a.createElement(k,l(l({ref:e},m),{},{components:n})):a.createElement(k,l({ref:e},m))}));function c(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,l=new Array(i);l[0]=u;var d={};for(var o in e)hasOwnProperty.call(e,o)&&(d[o]=e[o]);d.originalType=t,d.mdxType="string"==typeof t?t:r,l[1]=d;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3981:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return d},contentTitle:function(){return o},metadata:function(){return s},toc:function(){return m},default:function(){return u}});var a=n(2122),r=n(9756),i=(n(7294),n(3905)),l=["components"],d={sidebar_position:3},o="Instance.createCardField",s={unversionedId:"revolut-checkout-js/initialize-widget/instance/instance-create-card-field",id:"revolut-checkout-js/initialize-widget/instance/instance-create-card-field",isDocsHomePage:!1,title:"Instance.createCardField",description:"Create a card field, which is available on the Instance.",source:"@site/docs/revolut-checkout-js/initialize-widget/instance/instance-create-card-field.md",sourceDirName:"revolut-checkout-js/initialize-widget/instance",slug:"/revolut-checkout-js/initialize-widget/instance/instance-create-card-field",permalink:"/docs/revolut-checkout-js/initialize-widget/instance/instance-create-card-field",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"RevolutCheckout",previous:{title:"Instance.payWithPopup",permalink:"/docs/revolut-checkout-js/initialize-widget/instance/instance-pay-with-popup"},next:{title:"Instance.revolutPay",permalink:"/docs/revolut-checkout-js/initialize-widget/instance/instance-revolut-pay"}},m=[{value:"Options",id:"options",children:[]},{value:"Returns",id:"returns",children:[]},{value:"Examples",id:"examples",children:[{value:"Example with minimal required parameters",id:"example-with-minimal-required-parameters",children:[]},{value:"Example with minimal required parameters, assuming that the <code>billingAddress</code> and the <code>email</code> objects are not sent via API.",id:"example-with-minimal-required-parameters-assuming-that-the-billingaddress-and-the-email-objects-are-not-sent-via-api",children:[]}]}],p={toc:m};function u(t){var e=t.components,n=(0,r.Z)(t,l);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"instancecreatecardfield"},"Instance.createCardField"),(0,i.kt)("p",null,"Create a card field, which is available on the ",(0,i.kt)("a",{parentName:"p",href:"#instance"},(0,i.kt)("inlineCode",{parentName:"a"},"Instance")),"."),(0,i.kt)("h2",{id:"options"},"Options"),(0,i.kt)("p",null,"Use the ",(0,i.kt)("inlineCode",{parentName:"p"},"Options")," object to specify the pages where the customer should be redirected, any styling parameters and any additional information related to the payment of the customer:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"type InstanceCreateCardField = (\n  options: Options\n) => {\n  submit: (meta: Meta) => void;\n  validate: () => void;\n  destroy: () => void;\n};\n\n\ntype Options = {\n  target: HTMLElement;\n  onSuccess?: () => void;\n  onError?: (message: string) => void;\n  onValidation?: (messages: string[]) => void;\n  onCancel?: () => void;\n  locale?: string;\n  styles?: {\n    default?: Object;\n    focused?: Object;\n    invalid?: Object;\n    empty?: Object;\n    autofilled?: Object;\n    completed?: Object;\n  };\n  classes?: {\n    default?: string;\n    focused?: string;\n    invalid?: string;\n    empty?: string;\n    autofilled?: string;\n    completed?: string;\n  };\n};\n\n\ntype Meta = {\n  name: string;\n  email?: string;\n  phone?: string;\n  savePaymentMethodFor?: string;\n  billingAddress?: {\n    countryCode: string;\n    region?: string;\n    city?: string;\n    postcode: string;\n    streetLine1?: string;\n    streetLine2?: string;\n  };\n  shippingAddress?: {\n    countryCode: string;\n    region?: string;\n    city?: string;\n    postcode: string;\n    streetLine1?: string;\n    streetLine2?: string;\n  };\n};\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Option"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Format"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"onSuccess")),(0,i.kt)("td",{parentName:"tr",align:null},"Callback is called when the payment is completed successfully."),(0,i.kt)("td",{parentName:"tr",align:null},"Function")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"onError")),(0,i.kt)("td",{parentName:"tr",align:null},"Callback if the transaction fails to complete. The reason for the failure is available in the ",(0,i.kt)("inlineCode",{parentName:"td"},"message")," parameter."),(0,i.kt)("td",{parentName:"tr",align:null},"Function")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"onValidation")),(0,i.kt)("td",{parentName:"tr",align:null},"Callback called on validation of the status change. ",(0,i.kt)("br",null)," Function contains ",(0,i.kt)("inlineCode",{parentName:"td"},"messages")," as first parameter (see below)"),(0,i.kt)("td",{parentName:"tr",align:null},"Function")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"onValidation.messages")),(0,i.kt)("td",{parentName:"tr",align:null},"Array of strings that contains validation errors (e.g. ",(0,i.kt)("inlineCode",{parentName:"td"},"Your card has expired"),".)"),(0,i.kt)("td",{parentName:"tr",align:null},"String")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"onCancel")),(0,i.kt)("td",{parentName:"tr",align:null},"Callback if a user did not complete the transaction and cancelled the authorisation or closed the checkout window."),(0,i.kt)("td",{parentName:"tr",align:null},"Function")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"locale")),(0,i.kt)("td",{parentName:"tr",align:null},"Controls the language of the text in the widget. Possible values are: ",(0,i.kt)("inlineCode",{parentName:"td"},"en")," (English), ",(0,i.kt)("inlineCode",{parentName:"td"},"es")," (Spanish), ",(0,i.kt)("inlineCode",{parentName:"td"},"de")," (German), ",(0,i.kt)("inlineCode",{parentName:"td"},"fr")," (French), ",(0,i.kt)("inlineCode",{parentName:"td"},"it")," (Italian), ",(0,i.kt)("inlineCode",{parentName:"td"},"nl")," (Dutch), ",(0,i.kt)("inlineCode",{parentName:"td"},"pl")," (Polish), ",(0,i.kt)("inlineCode",{parentName:"td"},"pt")," (Portuguese)"),(0,i.kt)("td",{parentName:"tr",align:null},"String")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"target")),(0,i.kt)("td",{parentName:"tr",align:null},"DOM element where secure iframe with the card field input is rendered"),(0,i.kt)("td",{parentName:"tr",align:null},"HTML Element")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"styles")),(0,i.kt)("td",{parentName:"tr",align:null},"Object of styles for different state of card field input, used to customize different states inside the secure iframe."),(0,i.kt)("td",{parentName:"tr",align:null},"Object")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"styles.default")),(0,i.kt)("td",{parentName:"tr",align:null},"Base styles that are always applied regardless of state."),(0,i.kt)("td",{parentName:"tr",align:null},"Object")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"styles.focused")),(0,i.kt)("td",{parentName:"tr",align:null},"Applied when a user focuses inside the input with a mouse or a keyboard."),(0,i.kt)("td",{parentName:"tr",align:null},"Object")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"styles.invalid")),(0,i.kt)("td",{parentName:"tr",align:null},"Applied on validation error"),(0,i.kt)("td",{parentName:"tr",align:null},"Object")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"styles.empty")),(0,i.kt)("td",{parentName:"tr",align:null},"Applied when a user hasn't entered any amount."),(0,i.kt)("td",{parentName:"tr",align:null},"Object")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"styles.autofilled")),(0,i.kt)("td",{parentName:"tr",align:null},"Applied when a user used autofilled card details from the browser."),(0,i.kt)("td",{parentName:"tr",align:null},"Object")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"styles.completed")),(0,i.kt)("td",{parentName:"tr",align:null},"Applied if the card field input is completed without any errors"),(0,i.kt)("td",{parentName:"tr",align:null},"Object")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"classes")),(0,i.kt)("td",{parentName:"tr",align:null},"Same as ",(0,i.kt)("inlineCode",{parentName:"td"},"styles")," but used to apply styles with classes to the ",(0,i.kt)("inlineCode",{parentName:"td"},"target")," element outside the secure ",(0,i.kt)("inlineCode",{parentName:"td"},"iframe"),"."),(0,i.kt)("td",{parentName:"tr",align:null},"Object")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"classes.default")),(0,i.kt)("td",{parentName:"tr",align:null},"Set default to ",(0,i.kt)("inlineCode",{parentName:"td"},"'rc-card-field'")),(0,i.kt)("td",{parentName:"tr",align:null},"String")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"classes.focused")),(0,i.kt)("td",{parentName:"tr",align:null},"Set default to ",(0,i.kt)("inlineCode",{parentName:"td"},"'rc-card-field--focused'")),(0,i.kt)("td",{parentName:"tr",align:null},"String")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"classes.invalid")),(0,i.kt)("td",{parentName:"tr",align:null},"Set default to ",(0,i.kt)("inlineCode",{parentName:"td"},"'rc-card-field--invalid'")),(0,i.kt)("td",{parentName:"tr",align:null},"String")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"classes.empty")),(0,i.kt)("td",{parentName:"tr",align:null},"Set default to ",(0,i.kt)("inlineCode",{parentName:"td"},"'rc-card-field--empty'")),(0,i.kt)("td",{parentName:"tr",align:null},"String")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"classes.autofilled")),(0,i.kt)("td",{parentName:"tr",align:null},"Set default to ",(0,i.kt)("inlineCode",{parentName:"td"},"'rc-card-field--autofilled'")),(0,i.kt)("td",{parentName:"tr",align:null},"String")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"classes.completed")),(0,i.kt)("td",{parentName:"tr",align:null},"Set default to ",(0,i.kt)("inlineCode",{parentName:"td"},"'rc-card-field--completed'")),(0,i.kt)("td",{parentName:"tr",align:null},"String")))),(0,i.kt)("h2",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Methods")," object:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Field"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Format"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"methods.destroy")),(0,i.kt)("td",{parentName:"tr",align:null},"Manually destroy card field if needed"),(0,i.kt)("td",{parentName:"tr",align:null},"Function")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"methods.submit")),(0,i.kt)("td",{parentName:"tr",align:null},"Submit the card details that a user entered and complete the payment with additional customer metadata. Accepts a single ",(0,i.kt)("inlineCode",{parentName:"td"},"meta")," parameter (see below)"),(0,i.kt)("td",{parentName:"tr",align:null},"Function")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"methods.validate")),(0,i.kt)("td",{parentName:"tr",align:null},"Manually trigger validation of the card details that a user entered. By default, it\u2019s triggered only after a user starts to enter card details and on submit."),(0,i.kt)("td",{parentName:"tr",align:null},"Function")))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Meta")," object:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Field"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Format"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"meta.name")),(0,i.kt)("td",{parentName:"tr",align:null},"Cardholder\u2019s name in the format of ",(0,i.kt)("inlineCode",{parentName:"td"},"FirstName LastName"),". This value is ",(0,i.kt)("strong",{parentName:"td"},"required"),"."),(0,i.kt)("td",{parentName:"tr",align:null},"String")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"meta.email")),(0,i.kt)("td",{parentName:"tr",align:null},"Customer's email. This is ",(0,i.kt)("strong",{parentName:"td"},"required")," if not set on the order via API."),(0,i.kt)("td",{parentName:"tr",align:null},"String")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"meta.phone")),(0,i.kt)("td",{parentName:"tr",align:null},"Customer's phone number if available"),(0,i.kt)("td",{parentName:"tr",align:null},"String")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"meta.savePaymentMethodFor")),(0,i.kt)("td",{parentName:"tr",align:null},"Indicates in which case this saved payment method can be used for payments. ",(0,i.kt)("br",null),(0,i.kt)("br",null),"Possible values:",(0,i.kt)("br",null),"- ",(0,i.kt)("inlineCode",{parentName:"td"},"customer"),": This method can be used only when the customer is on the checkout page.",(0,i.kt)("br",null),"- ",(0,i.kt)("inlineCode",{parentName:"td"},"merchant"),": This method can be used without the customer being on the checkout page, and the merchant can initiate transactions (e.g. take payments for recurring transactions). This method is saved as the new default payment method for merchant initiated transactions, regardless of the number of saved payment methods stored against the customer."),(0,i.kt)("td",{parentName:"tr",align:null},"Enum")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"meta.billingAddress")),(0,i.kt)("td",{parentName:"tr",align:null},"Customer's billing address. This is required if not set on order via API."),(0,i.kt)("td",{parentName:"tr",align:null},"Object")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"meta.billingAddress.countryCode")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{href:"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements",target:"_blank"},"Country code")," (e.g. ",(0,i.kt)("inlineCode",{parentName:"td"},"GB"),"). If sending the ",(0,i.kt)("inlineCode",{parentName:"td"},"billingAddress"),", this is ",(0,i.kt)("strong",{parentName:"td"},"required"),"."),(0,i.kt)("td",{parentName:"tr",align:null},"String")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"meta.billingAddress.region")),(0,i.kt)("td",{parentName:"tr",align:null},"State, county or region. For US states, the ",(0,i.kt)("a",{href:"https://en.wikipedia.org/wiki/List_of_U.S._state_and_territory_abbreviations",target:"_blank"},"the 2-digit abbreviation")," should be used (e.g. ",(0,i.kt)("inlineCode",{parentName:"td"},"AL")," for Alabama)"),(0,i.kt)("td",{parentName:"tr",align:null},"String")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"meta.billingAddress.city")),(0,i.kt)("td",{parentName:"tr",align:null},"Name of the city (e.g. ",(0,i.kt)("inlineCode",{parentName:"td"},"London"),")"),(0,i.kt)("td",{parentName:"tr",align:null},"String")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"meta.billingAddress.postcode")),(0,i.kt)("td",{parentName:"tr",align:null},"Postal code (e.g. ",(0,i.kt)("inlineCode",{parentName:"td"},"EC2V 6DN"),"). If sending the ",(0,i.kt)("inlineCode",{parentName:"td"},"billingAddress"),", this is ",(0,i.kt)("strong",{parentName:"td"},"required"),"."),(0,i.kt)("td",{parentName:"tr",align:null},"String")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"meta.billingAddress.streetLine1")),(0,i.kt)("td",{parentName:"tr",align:null},"Address line 1 (e.g. ",(0,i.kt)("inlineCode",{parentName:"td"},"1 Canada Square"),")"),(0,i.kt)("td",{parentName:"tr",align:null},"String")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"meta.billingAddress.streetLine2")),(0,i.kt)("td",{parentName:"tr",align:null},"Address line 2 (optional)"),(0,i.kt)("td",{parentName:"tr",align:null},"String")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"meta.shippingAddress")),(0,i.kt)("td",{parentName:"tr",align:null},"Same as ",(0,i.kt)("inlineCode",{parentName:"td"},"meta.billingAddress"),", However, it is displayed only in the order details on the ",(0,i.kt)("a",{href:"https://business.revolut.com/merchant",target:"_blank"},"merchant dashboard"),"."),(0,i.kt)("td",{parentName:"tr",align:null},"Object")))),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("h3",{id:"example-with-minimal-required-parameters"},"Example with minimal required parameters"),(0,i.kt)("p",null,"The HTML that will sit in the checkout page:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<div id="card-field"></div>\n<button id="button-submit">Submit</button>\n')),(0,i.kt)("p",null,"The JS that controls the behaviour of the instance:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'RevolutCheckout("<PUBLIC_ID>").then(function (instance) {\n  var card = instance.createCardField({\n    target: document.getElementById("card-field"),\n    onSuccess() {\n      window.alert("Thank you!");\n    },\n    onError(message) {\n      window.alert("Oh no :(");\n    },\n  });\n\n\n  document\n    .getElementById("button-submit")\n    .addEventListener("click", function () {\n      card.submit();\n    });\n});\n')),(0,i.kt)("h3",{id:"example-with-minimal-required-parameters-assuming-that-the-billingaddress-and-the-email-objects-are-not-sent-via-api"},"Example with minimal required parameters, assuming that the ",(0,i.kt)("inlineCode",{parentName:"h3"},"billingAddress")," and the ",(0,i.kt)("inlineCode",{parentName:"h3"},"email")," objects are not sent via API."),(0,i.kt)("p",null,"The HTML that will sit in the checkout page:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<form>\n    <div>\n    <label>Full name</label>\n    <input name="full_name" placeholder="John Doe" />\n  </div>\n  <div>\n    <label>Email</label>\n    <input name="email" placeholder="customer@example.com" />\n  </div>\n  <div>\n    <label>Card</label>\n    <div name="card"></div>\n  </div>\n  <div>\n    <label>Billing Address</label>\n\n\n    <input name="country" placeholder="Country" />\n    <input name="state" placeholder="State" />\n    <input name="city" placeholder="City" />\n    <input name="line1" placeholder="Address line 1" />\n    <input name="line2" placeholder="Address line 2" />\n    <input name="postal" placeholder="Postal" />\n  </div>\n  <button>Submit</button>\n</form>\n')),(0,i.kt)("p",null,"The JS that controls the behaviour of the instance:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'RevolutCheckout("<PUBLIC_ID>").then(function (instance) {\n  var form = document.querySelector("form");\n  var card = instance.createCardField({\n    target: document.querySelector("[name=card]"),\n    onSuccess() {\n      window.alert("Thank you!");\n    },\n    onError(message) {\n      window.alert("Oh no :(");\n    },\n    locale: "es"\n  });\n\n\n  form.addEventListener("submit", function (event) {\n    // Prevent browser form submission. You need to submit card details first.\n    event.preventDefault();\n\n\n    var data = new FormData(form);\n\n\n    card.submit({\n      name: data.get("full_name"),\n      email: data.get("email"),\n      billingAddress: {\n        countryCode: data.get("country"),\n        region: data.get("state"),\n        city: data.get("city"),\n        streetLine1: data.get("line1"),\n        streetLine2: data.get("line2"),\n        postcode: data.get("postal")\n      }\n    });\n  });\n});\n')),(0,i.kt)("p",null,"For a more in-depth example, see the ",(0,i.kt)("a",{parentName:"p",href:"#integration-examples-integrating-and-customising-the-card-field"},"card field integration")," example."),(0,i.kt)("div",{class:"feedback"}))}u.isMDXComponent=!0}}]);