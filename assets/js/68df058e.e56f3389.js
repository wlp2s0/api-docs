(self.webpackChunkdev_rev_docs=self.webpackChunkdev_rev_docs||[]).push([[5779],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return p},kt:function(){return g}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(r),g=a,y=d["".concat(u,".").concat(g)]||d[g]||c[g]||i;return r?n.createElement(y,o(o({ref:t},p),{},{components:r})):n.createElement(y,o({ref:t},p))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},834:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var n=r(2122),a=r(9756),i=(r(7294),r(3905)),o=["components"],l={sidebar_position:2,title:"1. Get the JWKs URL"},u="Get the JWKs URL",s={unversionedId:"build-banking-apps/register-your-application-using-dcr/get-the-jwks-url",id:"build-banking-apps/register-your-application-using-dcr/get-the-jwks-url",isDocsHomePage:!1,title:"1. Get the JWKs URL",description:"JWKs (JWK Set) is a JSON data structure that represents a set of JWKs. A JSON Web Key (JWK) is a (JSON) data structure that represents a cryptographic key.",source:"@site/docs/build-banking-apps/register-your-application-using-dcr/get-the-jwks-url.md",sourceDirName:"build-banking-apps/register-your-application-using-dcr",slug:"/build-banking-apps/register-your-application-using-dcr/get-the-jwks-url",permalink:"/docs/build-banking-apps/register-your-application-using-dcr/get-the-jwks-url",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"1. Get the JWKs URL"},sidebar:"docs",previous:{title:"Register your application using DCR",permalink:"/docs/build-banking-apps/register-your-application-using-dcr/register-your-application-using-dcr"},next:{title:"2. Get the software statement",permalink:"/docs/build-banking-apps/register-your-application-using-dcr/ get-the-software-statement"}},p=[],c={toc:p};function d(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"get-the-jwks-url"},"Get the JWKs URL"),(0,i.kt)("p",null,"JWKs (JWK Set) is a JSON data structure that represents a set of JWKs. A JSON Web Key (JWK) is a (JSON) data structure that represents a cryptographic key."),(0,i.kt)("p",null,"If you are using your Open Banking certificate, you should receive your JWKs URL from the Open Banking Directory."),(0,i.kt)("p",null,"If you are using your eIDAS certificate, the JWK should contain the following fields:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"JWK mandatory fields"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"kid")),(0,i.kt)("td",{parentName:"tr",align:null},"The key ID that is used to match a specific key.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"kty")),(0,i.kt)("td",{parentName:"tr",align:null},"The cryptographic algorithm family used with the key.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"e")),(0,i.kt)("td",{parentName:"tr",align:null},"Contains the exponent value for the RSA public key, represented as a Base64urlUInt-encoded value.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"n")),(0,i.kt)("td",{parentName:"tr",align:null},"Contains the modulus value for the RSA public key, represented as a Base64urlUInt-encoded value.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"use")),(0,i.kt)("td",{parentName:"tr",align:null},"The intended use of the public key (should always be set to ",(0,i.kt)("inlineCode",{parentName:"td"},"sig"),").")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"x5c")),(0,i.kt)("td",{parentName:"tr",align:null},"The base64-encoded DER.")))),(0,i.kt)("div",{class:"feedback"}))}d.isMDXComponent=!0}}]);